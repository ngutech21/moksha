name: Rust

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install protobuf-compiler
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Install just
        run: cargo install just
      - name: Run Docker Compose
        run: docker compose up lnd1 -d
      - name: Build
        run: cargo build --verbose
      # - name: Set permissions for admin.macaroon
      #   run: sudo chmod a+rw ./data/lnd1/data/chain/bitcoin/regtest/admin.macaroon
      # - name: Set permissions for tls.cert
      #   run: sudo chmod a+rw ./data/lnd1/tls.cert
      - name: chmod data-dir
        run: sudo chmod -R a+rwx ./data
      - name: Run tests
        run: just run-tests
      - name: Run itests
        run: just run-itests
  coverage:
    runs-on: ubuntu-latest
    name: coverage

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install protobuf-compiler
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - name: cargo install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo llvm-cov
        run: cargo llvm-cov --locked --all-features --lcov --output-path lcov.info
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
